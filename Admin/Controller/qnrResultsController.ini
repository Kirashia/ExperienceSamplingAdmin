<?php
include("qnrCreatorController.ini");
include("ScoreData.ini");

class qnrResultsController extends qnrCreatorController
{
	// Public
	public $userTable;
	public $usernames;
	
	// Private
	private $users;
	
	public function __construct()
	{
		$this -> qnrDb = new qnrCreatorDatabase();
		$this -> qnrs = $this -> qnrDb -> getQnrs();
			
		// New variables for this class only
		$this -> users = $this -> getUsers();
		$this -> userTable = $this -> printUsers();
		$this -> usernames = $this -> getUserNames();
		
		// Get all qnrs into a table
		$this -> qnrTable = $this->printQnrs();
		$this -> qnrNames = $this -> getQnrNames();
	}
	
	public function getUsers()
	{
		return $this -> qnrDb -> getAllUsers();
	}
	
	public function getUserNames()
	{
		$result = [];
		foreach($this->users as $selected_row){
			//init table row			
			array_push($result,$selected_row["username"]);
		}
		return $result;
	}
	
	public function getQnrID($qnrName)
	{
		
		foreach($this -> qnrs as $selected_row){			
			//init table row			
			$testData = $selected_row["title"];
			if ($testData == $qnrName){
				//echo "Found quesitonnaire: ".$testData.", fk = ".$selected_row["id"];
				return $selected_row["id"];
			}
						 	
		}	
		return -1;
	}
	
	public function printQs($qnrID)
	{
		$this -> qs = $this -> qnrDb -> getFilterQs($qnrID);
				
		if (count($this -> qs) == 0){
			return "<p> No questions currently exist in this quesitonnaire </p>";
		}
		
		$qsTable = "";
		
		$qsTable .= '<table>';				
	
		//headers		
		$qsTable .= '<tr>';		
		
		$qsTable .= "<th>Title</th>";			
		
		foreach($this->qs as $selected_row){			
			$qsTable .= '<tr>'; 
			//init table row
			
				$qsTable .= "<td>".$selected_row["title"]."</td>"; 
				//echo row with header or data appropriatly			
			
			$qsTable .= '</tr>'; 
			//end table row		
		}				
		$qsTable .= '</table>';	

		return $qsTable;
	}
	
	public function getScores($qnrID)
	{
		// Get results //
		// Get questionnaire questions
		$qs = $this -> qnrDb -> getFilterQs($qnrID);
		
		// Get data from each question
		$qData = array();
		foreach($qs as $q)
		{
			// Current method only works for score questions
			if($q["type"] != 'score')
			{
				continue;
			}
			
			// Generates a new ScoreData object, which generates the scores and averages for itself
			$questionData = new ScoreData($q["id"], $this -> qnrDb);
			
			// Assembles the objects into an array
			array_push($qData, $questionData);
		}

		
		return $qData;
	}
	
	public function makeResultsTable($scoreValues)
	{		
		$results = '<table border="1px solid black" style="border-collapse:collapse">';				
	
		//headers		
		$results .= '<tr>';		
		
		$results .= '<th>Question</th>';
		
		for($key = 0; $key < 10; $key++){			
			$results .= "<th>" . ($key+1) . "</th>";		
		}
		$results .= "<th>Avg</th>";
		
		$results .= '</tr>';				
		
		foreach($scoreValues as $selected_row)
		{			
			$results .= '<tr>'; 
			//init table row			
			
			$results .= '<td>'.$selected_row -> title.'</td>'; 

			$values = $selected_row -> values;
			//var_dump($values);
			// ;
			for($i = 0; $i < count($values); $i++)
			{
				$results .= '<td>'.$values[$i+1].'</td>'; 
			}
			
			$results .= '<td>'.$selected_row -> averageValue.'</td>'; 
			
			
			$results .= '</tr>'; 
			//end table row		
		}				
		$results .= '</table>';	

		return $results;
	}
	
	public function getAverageScore($arr)
	{
		$sum = 0;
		for($i = 0; $i < count($arr) - 1; $i++)
		{
			$item = $arr[(string) $i + 1];
			$sum += $item * ($i+1);
		}
		
		$sum /= count($arr);
		
		return $sum;
	}
	
	public function printUsers()
	{	
	
		$qnrsTable = "";
		
		$qnrsTable .= '<table>';				
	
		//headers		
		$qnrsTable .= '<tr>';		
		
		foreach($this->users[0] as $key => $value){			
			$qnrsTable .= "<th>" . $key . "</th>";		
		}		
		$qnrsTable .= '</tr>';				
		
		foreach($this->users as $selected_row){			
			$qnrsTable .= '<tr>'; 
			//init table row			
			for ($n = 0; $n < count($selected_row); $n++){				
				$qnrsTable .= "<td>".array_values($selected_row)[$n]."</td>"; 
				//echo row with header or data appropriatly			
			}			
			$qnrsTable .= '</tr>'; 
			//end table row		
		}				
		$qnrsTable .= '</table>';	

		return $qnrsTable;
	}
	
	public function printQnrUsers()
	{
		return $this -> qnrDb -> getAllQnrUser();
	}
	
	public function printQnrUserTable()
	{
		$table = "";
		
		$table .= '<table>';				
	
		//headers		
		$table .= '<tr>';		
		
		$data = $this -> printQnrUsers();
		
		foreach($data[0] as $key => $value){			
			$table .= "<th>" . $key . "</th>";		
		}		
		$table .= '</tr>';				
		
		foreach($data as $selected_row){			
			$table .= '<tr>'; 
			//init table row			
			for ($n = 0; $n < count($selected_row); $n++){				
				$table .= "<td>".array_values($selected_row)[$n]."</td>"; 
				//echo row with header or data appropriatly			
			}			
			$table .= '</tr>'; 
			//end table row		
		}				
		$table .= '</table>';	

		return $table;
	}
	
	public function printSomeQnrUsers($ID, $user)
	{
		return $this -> qnrDb -> getFilterQnrUser($ID, $user);
	}
}

?>